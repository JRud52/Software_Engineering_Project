@model Software_Engineering_Project.Models.Calendar

<div class="col-md-12" id="calendar">
    <div class="row">        
        <div class="col-md-12 text-center">
            <h2>Room @Model.roomID </h2>
        </div>        
    </div>

    <div class="row">
        <div class="col-md-3 text-right">
            <h3>
                @using Software_Engineering_Project.App_Code
                @Ajax.RawActionLink(
                    string.Format("<span class=\"glyphicon glyphicon-menu-left\"></span>"),
                    "UpdateRoomCalendar",
                    "Calendar",
                     new { currentCalendarDate = Model.date, Model.roomID, next = false },
                    new AjaxOptions
                    {
                        HttpMethod = "GET",
                        InsertionMode = InsertionMode.ReplaceWith,
                        UpdateTargetId = "calendar",
                        OnComplete = null
                    }
                )
            </h3>
        </div>

        <div class="col-md-6 text-center">
            <h3>@String.Format("{0:MMMM yyyy}", Model.date, Model.date.Year)</h3>
        </div>

        <div class="col-md-3 text-left">
            <h3>
                @using Software_Engineering_Project.App_Code
                @Ajax.RawActionLink(
                    string.Format("<span class=\"glyphicon glyphicon-menu-right\"></span>"),
                    "UpdateRoomCalendar",
                    "Calendar",
                    new { currentCalendarDate = Model.date, Model.roomID, next = true },
                    new AjaxOptions
                    {
                        HttpMethod = "GET",
                        InsertionMode = InsertionMode.ReplaceWith,
                        UpdateTargetId = "calendar",
                        OnComplete = null
                    }
                )
            </h3>
        </div>

    </div>

    @{
        System.DateTime currDay = new System.DateTime(Model.date.Year, Model.date.Month, 1);
        System.DateTime lastDay;        
       

        if (currDay.Month == 12)
        {
            lastDay = new System.DateTime(Model.date.Year, Model.date.Month, 31);
            System.Diagnostics.Debug.WriteLine("Last day = " + lastDay);
        }
        else
        {
            lastDay = currDay.AddMonths(1).AddDays(-1);
        }

        bool started = false;
        int i = 0, j = 1;
        bool end = false;
    }


    @while (!end)
    {

        <div class="row seven-cols">
            @for (j = 1; j < 8 && !end; j++)
            {
                if (!started && (int)currDay.DayOfWeek != 7 * i + j - 1)
                {
                    <div class="col-md-1 table-bordered calendar-day"></div>
                }
                else
                {
                    started = true;


                    <div class="col-md-1 table-bordered calendar-day">
                        @using Software_Engineering_Project.App_Code
                        @{ 
                            if (currDay.Day < System.DateTime.Now.Day) {
                                <div class="row text-center calendar-day-header" style="background:#337ab7">
                                    @String.Format("{0:ddd} " + currDay.Day, currDay.DayOfWeek.ToString().Substring(0, 3)) 
                                </div>
                            }
                            else{
                                            <!--
                                Ajax.RawActionLink(
                                    string.Format("<div class=\"row text-center calendar-day-header\" style=\"background:#337ab7\">" +
                                        String.Format("{0:ddd} ", currDay.DayOfWeek.ToString().Substring(0, 3)) +
                                        currDay.Day +
                                        "</div>"),
                                    "GetDayScheduleByCalendar",
                                    "Calendar",
                                    new { date = currDay, bookings = Model.bookings, roomID = Model.roomID},
                                    new AjaxOptions
                                    {
                                        HttpMethod = "GET",
                                        InsertionMode = InsertionMode.ReplaceWith,
                                        UpdateTargetId = "calendar",
                                        OnComplete = null
                                    }
                                )
                                                -->                                 

                                using (Html.BeginForm("GetDayScheduleByCalendar", "Calendar", FormMethod.Post, new { @class = "row text-center calendar-day-header" }))
                                {
                                    @Html.HiddenFor(model => model.date)
                                    @Html.HiddenFor(model => model.bookings)
                                    @Html.HiddenFor(model => model.roomID)
                                    <input type="submit" class="w-100" value="@currDay.DayOfWeek.ToString().Substring(0, 3) @currDay.Day" />
                                }
                            }
                        }

                        
                       

                        @{
                            currDay = currDay.AddDays(1);
                            if (currDay.Month > lastDay.Month || currDay.Year > lastDay.Year)
                            {
                                end = true;
                            }
                        }

                        <div class="row">
                            @{

                                System.DateTime startTime = new System.DateTime(Model.date.Year, Model.date.Month, Model.date.Day, 8, 30, 0);

                                for (int k = 0; k < 9; k++)
                                {
                                    bool found = false;
                                    if (Model.bookings != null)
                                    {
                                        foreach (Software_Engineering_Project.Models.Bookings booking in Model.bookings)
                                        {
                                            if (booking.startTime == startTime)
                                            {
                                                found = true;
                                            }
                                        }
                                    }

                                    if (found)
                                    {
                                        <div class="col-md-12 text-center" style="background:red; height:8.8px;"></div>
                                    }
                                    else
                                    {
                                        <div class="col-lg-12 text-center" style="background: green; height: 8.8px;"></div>
                                    }

                                    startTime = startTime.AddHours(1.5);
                                }
                            }
                        </div>
                    </div>
                }
            }

            @for (; j < 8; j++)
            {
                <div class="col-md-1 table-bordered calendar-day"></div>
            }

        </div>

        i++;
    }
</div>